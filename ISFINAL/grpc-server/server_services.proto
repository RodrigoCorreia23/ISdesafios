syntax = "proto3";

package server_services;



// Serviço FileService para processamento de CSV, validação de XML e consulta de estados
service FileService {
  rpc SendFileChunks (stream SendFileChunksRequest) returns (SendFileChunksResponse);
  rpc ProcessCSV (CSVRequest) returns (CoordinatesResponse);
  rpc GetStatesByCountry (CountryRequest) returns (StatesResponse);
  rpc ConvertCSVToXML (ConvertCSVToXMLRequest) returns (ConvertCSVToXMLResponse);
  rpc ConvertXMLToXSD (ConvertXMLToXSDRequest) returns (ConvertXMLToXSDResponse);
  rpc ConvertXMLToDatabase (ConvertXMLToDatabaseRequest) returns (GenericResponse);
  rpc ExportToDatabase (ExportToDatabaseRequest) returns (ExportToDatabaseResponse);
  rpc GetCountryLocations (CountryRequest) returns (CountryResponse);
}

// Mensagens para conversão de XML para XSD
message ConvertXMLToXSDRequest {
  string file_name = 1;
  bytes file_content = 2;
}

message ConvertXMLToXSDResponse {
  bool success = 1;
  string xsd_file_path = 2;
}

// Mensagens para conversão de CSV para XML
message ConvertCSVToXMLRequest {
  string file_name = 1;
  bytes file_content = 2;
}

message ConvertCSVToXMLResponse {
  bool success = 1;
  string xml_file_path = 2;
}

// Mensagens para envio de arquivos
message SendFileRequestBody {
  bytes file = 1; // Arquivo enviado como bytes
  string file_mime = 2; // Tipo de arquivo (opcional)
  string file_name = 3; // Nome do arquivo (opcional)
}

message SendFileResponseBody {
  bool success = 1; // Indica se o envio foi bem-sucedido
}

message SendFileChunksRequest {
  bytes data = 1; // Chunk do arquivo enviado
  string file_name = 2; // Nome do arquivo (opcional, enviado no primeiro chunk ou como metadado)
}

message SendFileChunksResponse {
  bool success = 1; // Indica se o upload foi bem-sucedido
  string message = 2; // Mensagem adicional sobre o status
}

// Mensagens para processamento de CSV
message CSVRequest {
  bytes file = 1; // CSV enviado como bytes
}

message CoordinatesResponse {
  repeated Coordinate coordinates = 1; // Resposta com lista de coordenadas
  bool valid_xml = 2; // Status de validação do XML
}

// Estrutura para coordenadas
message Coordinate {
  string longitude = 1;
  string latitude = 2;
}

// Mensagens para consulta de estados
message CountryRequest {
  string country = 1;
}

message CountryResponse {
    repeated SalesItem sales_items = 1; // Lista de itens encontrados
}

message StatesResponse {
  repeated string states = 1;
}

message StatesRequest {
  string country = 1;
}

message ConvertXMLToDatabaseRequest {
    string file_name = 1; // Nome do arquivo XML no servidor
    bytes file_content = 2; // Conteúdo do arquivo XML
}

message GenericResponse {
    bool success = 1;
    string message = 2;
}

message ExportToDatabaseRequest {
  string file_name = 1;
}

message ExportToDatabaseResponse {
  bool success = 1;
  string message = 2;
}

message SalesItem {
    string country = 1;
    float longitude = 2;
    float latitude = 3;
}